# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
name: $(Date:yyyyMMdd)$(Rev:.r)
parameters:
  - name: appName
    displayName: Application Name
    type: string
  - name: environment
    displayName: Environment for this deployment
    type: string
  - name: location
    displayName: Location of deployed resources
    type: string
  - name: dbUser
    displayName: Username for admin user on PostgreSQL Database
    type: string

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '4c485bf3-112c-4704-9944-e819f2ec7392'
  
  # Web app name
  webAppName: 'nodepostgres-poc-eastus-app'
  
  # Environment name
  environmentName: 'nodepostgres-poc-eastus-app'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
      displayName: 'npm install, build and test'

    - task: CopyFiles@2
      displayName: 'Copy infrastructure code to $(Build.ArtifactStagingDirectory)/infra'
      inputs:
        contents: 'infra/**'
        targetFolder: $(Build.ArtifactStagingDirectory)/infra

    - task: DeleteFiles@1
      displayName: 'Delete infra directory before generated deployment archive'
      inputs:
        contents: |
          infra

    # Compress files into .7z, .tar.gz, or .zip
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)' 
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/drop/$(Build.BuildId).zip' 
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/drop/$(Build.BuildId).zip'
        artifactName: drop

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)/infra
        artifactName: infra

    

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: AzureCLI@2
            displayName: Deploy Infrastructure Components
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(Pipeline.Workspace)/infra
              inlineScript: |
                ls
                ./infra/deploy.sh  --appName $appName --environment $environment --location $location --dbUser $dbUser --dbPassword $dbPassword
            env:
              appName: $(appName)
              environment: $(environment)
              location: $(location)
              dbUser: $(dbUser) 
              dbPassword: $(dbPassword)

          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: nodepostgres-poc-eastus-app'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'