{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string"
        },
        "environment": {
            "type": "string"
        },
        "dbUser": {
            "type": "string"
        },
        "dbPassword": {
            "type": "securestring"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "baseName": "[toLower(concat(parameters('appName'), '-', parameters('environment'), '-' , parameters('location'), '-'))]",
        "storageBaseName": "[replace(variables('baseName'), '-', '')]",
        "webAppName": "[concat(variables('baseName'), 'app')]",
        "appPlanName": "[concat(variables('baseName'), 'plan')]",
        "databaseServerName": "[concat(variables('baseName'), 'psql')]",
        "appInsightsName": "[concat(variables('baseName'), 'appi')]",
        "keyVaultName": "[concat(variables('baseName'), 'kv')]",
        "keyVaultDbPasswordSecretName": "[concat(variables('keyVaultName'),'/dbPassword')]",
        "dbConnectionAppSettings" : {
            "host": "[concat(variables('databaseServerName'), '.postgres.database.azure.com')]",
            "user": "[concat(parameters('dbUser'), '@', variables('databaseServerName'))]",
            "password": "[parameters('dbPassword')]",
            "database": "postgres"
        }
    },
    "resources": [
        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[variables('databaseServerName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "GP_Gen5_2",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "properties": {
                "administratorLogin": "[parameters('dbUser')]",
                "administratorLoginPassword": "[parameters('dbPassword')]",
                "createMode": "Default",
                "version": "11",
                "sslEnforcement": "Enabled",
                "minimalTlsVersion": "TLSEnforcementDisabled",
                "infrastructureEncryption": "Disabled",
                "publicNetworkAccess": "Enabled",
                "storageProfile": {
                    "storageMB": 5120,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled",
                    "storageAutogrow": "Enabled"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[variables('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantid]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')),'2019-08-01', 'full').identity.principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                            "get"
                            ],
                        "certificates": []
                    }
                }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[variables('keyVaultDbPasswordSecretName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('dbPassword')]"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[variables('appInsightsName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites', variables('webAppName'))]": "Resource",
                "displayName": "App Insights"
            },
            "properties": {
                "Application_Type": "web",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled",
                "applicationId": "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('appPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "family": "Pv2",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },        
        {
            "type": "Microsoft.Web/sites",
            "kind": "app,linux",
            "name": "[variables('webAppName')]",
            "apiVersion": "2018-11-01",            
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ],            
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('webAppName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('webAppName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "appSettings": [
                         {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "PGHOST",
                            "value": "[variables('dbConnectionAppSettings').host]"
                        },
                        {
                            "name": "PGUSER",
                            "value": "[variables('dbConnectionAppSettings').user]"
                        },
                        {
                            "name": "PGDATABASE",
                            "value": "[variables('dbConnectionAppSettings').database]"
                        },
                        {
                            "name": "PGPASSWORD",
                            "value": "[concat('@Microsoft.KeyVault(VaultName=', variables('keyVaultName'), ';SecretName=dbPassword)')]"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('webAppName'), '/web')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "NODE|10.10",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "azureStorageAccounts": {},
                "scmType": "VSTSRM",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "appCommandLine": "npm run start",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        }
    ],
    "outputs": {
        "webAppName": {
            "type": "string",
            "value": "[variables('webAppName')]"
        },
        "appPlanName":  {
            "type": "string",
            "value": "[variables('appPlanName')]"
        },
        "databaseServerName": {
            "type": "string",
            "value":  "[variables('databaseServerName')]"
        },
        "appInsightsName": {
            "type": "string",
            "value":  "[variables('appInsightsName')]"
        },
        "keyVaultName": {
            "type": "string",
            "value":  "[variables('keyVaultName')]"
        },
        "dbHostAppSetting": {
            "type": "string",
            "value":  "[variables('dbConnectionAppSettings').host]"
        },
        "dbUserAppSetting": {
            "type": "string",
            "value":  "[variables('dbConnectionAppSettings').user]"
        },
        "websiteUrl": {
            "type": "string",
            "value": "[concat('https://', variables('webAppName'), '.azurewebsites.net')]"
        }
    }
}